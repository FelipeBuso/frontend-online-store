{"version":3,"sources":["components/Category.jsx","services/localStorage.js","components/Product.jsx","services/api.js","pages/Home.jsx","components/ShoppingCartItem.jsx","pages/ShoppingCart.jsx","components/Rating.jsx","components/AvaliationForm.jsx","components/Avaliations.jsx","pages/Details.jsx","components/States.jsx","components/BuyerInfo.jsx","pages/Checkout.jsx","pages/CheckoutSuccessful.jsx","App.js","serviceWorker.js","index.js"],"names":["Category","this","props","id","name","handleChange","className","htmlFor","type","value","data-testid","onChange","Component","handleCart","cart","cartItems","JSON","parse","localStorage","getItem","push","setItem","stringify","Product","product","callback","obj","Object","assign","quantity","title","price","thumbnail","freeShipping","shipping","free_shipping","src","alt","to","pathname","state","element","onClick","addQuantity","a","fetch","requestApi","json","data","categoryId","query","Home","search","categories","searchResult","voidSearch","category","bind","queryResult","handleCategory","getLocalStorage","api","then","result","setState","target","reduce","acc","item","results","bool","length","map","key","placeholder","ShoppingCartItem","totalPrice","buttonIncrease","availableQuantity","available_quantity","handleIncrease","handleDecrease","updatePriceAndProduct","checkQuantity","updatedProduct","newTotalPrice","deletProduct","disabled","Math","round","ShoppingCart","shoppingCart","totalShoppingCart","retrieveCartItems","removedItemCart","filter","productUpdated","newShoppincart","totalSumPrices","total","Rating","AvaliationForm","avaliation","formStars","email","message","handleForm","event","productId","storage","idObj","window","location","reload","Avaliations","avaliations","index","Details","match","params","attributes","valueName","value_name","attributeId","getForm","States","defaultValue","BuyerInfo","Checkout","redirectCheckout","checkoutResume","CheckoutSuccessful","App","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.10061a02.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/Category.css';\n\nexport default class Category extends Component {\n  render() {\n    const { id, name, handleChange } = this.props;\n    return (\n      <div className=\"categories form-check\">\n        <label htmlFor={ name } className=\"category-label form-check-label\">\n          <input\n            type=\"radio\"\n            id={ name }\n            value={ id }\n            className=\"form-check-input\"\n            name=\"category\"\n            data-testid=\"category\"\n            onChange={ handleChange }\n          />\n          { name }\n        </label>\n      </div>\n    );\n  }\n}\n\nCategory.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","function handleCart(cart) {\n  let cartItems = JSON.parse(localStorage.getItem('cart'));\n  if (!cartItems) {\n    cartItems = [];\n  }\n\n  // Adiciona o carrinho ao localStorage\n  cartItems.push(cart);\n  localStorage.setItem('cart', JSON.stringify([...cartItems]));\n}\n\nexport default handleCart;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport handleCart from '../services/localStorage';\nimport '../styles/Product.css';\n\nexport default class Product extends Component {\n  addQuantity(product) {\n    const { callback } = this.props;\n    const quantityProduct = { quantity: 1 };\n    const obj = Object.assign(quantityProduct, product);\n    handleCart(obj);\n    callback();\n  }\n\n  freeShipping() {\n    return (\n      <span className=\"free-shipping btn-success\" data-testid=\"free-shipping\">\n        Frete Grátis\n      </span>\n    );\n  }\n\n  render() {\n    const { product } = this.props;\n    const { id, title, price, thumbnail, shipping } = product;\n    const { free_shipping: freeShipping } = shipping;\n    return (\n      <div className=\"product\" data-testid=\"product\">\n        <div className=\"product-title\">\n          <h5>{ title }</h5>\n        </div>\n        <div className=\"product-image\">\n          <img\n            src={ thumbnail }\n            alt={ title }\n          />\n        </div>\n        <div className=\"product-price-shipping\">\n          <span>\n            R$\n            { price }\n          </span>\n          {\n            freeShipping && this.freeShipping()\n          }\n        </div>\n        <div className=\"product-buttons\">\n          <Link\n            data-testid=\"product-detail-link\"\n            className=\"btn btn-primary\"\n            to={ {\n              pathname: `/Details/${id}`,\n              state: {\n                element: product,\n              },\n            } }\n          >\n            Detalhes\n          </Link>\n          <button\n            id={ id }\n            type=\"button\"\n            onClick={ () => this.addQuantity(product) }\n            data-testid=\"product-add-to-cart\"\n            className=\"btn btn-success\"\n          >\n            Adicionar ao Carrinho\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\nProduct.propTypes = {\n  product: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    thumbnail: PropTypes.string.isRequired,\n    shipping: PropTypes.shape({\n      free_shipping: PropTypes.bool.isRequired,\n    }).isRequired,\n  }).isRequired,\n\n  callback: PropTypes.func.isRequired,\n};\n","export async function getCategories() {\n  const requestApi = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const data = await requestApi.json();\n  return data;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  const requestApi = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`);\n  const data = await requestApi.json();\n  return data;\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Category from '../components/Category';\nimport Product from '../components/Product';\nimport * as api from '../services/api';\nimport '../styles/Home.css';\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      search: '',\n      categories: [],\n      searchResult: [],\n      voidSearch: false,\n      category: '',\n      cart: 0,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.queryResult = this.queryResult.bind(this);\n    this.handleCategory = this.handleCategory.bind(this);\n    this.getLocalStorage = this.getLocalStorage.bind(this);\n  }\n\n  componentDidMount() {\n    api.getCategories().then((result) => this.setState({\n      categories: result,\n    }));\n    this.getLocalStorage();\n  }\n\n  handleChange({ target }) {\n    const { value, name } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleCategory({ target }) {\n    const { value, name } = target;\n    this.setState({\n      [name]: value,\n    }, () => {\n      this.queryResult();\n    });\n  }\n\n  getLocalStorage() {\n    let cartItems = JSON.parse(localStorage.getItem('cart'));\n    if (cartItems === null) {\n      cartItems = [];\n    }\n    const result = cartItems.reduce((acc, item) => acc + item.quantity, 0);\n    this.setState({\n      cart: result,\n    });\n  }\n\n  queryResult() {\n    const { search, category } = this.state;\n    api.getProductsFromCategoryAndQuery(category, search)\n      .then(({ results }) => {\n        this.setState({\n          searchResult: results,\n        }, () => {\n          const { searchResult } = this.state;\n          const bool = searchResult.length === 0;\n          this.setState({\n            voidSearch: bool,\n          });\n        });\n      });\n  }\n\n  render() {\n    const { categories, search, searchResult, voidSearch, cart } = this.state;\n    return (\n      <div className=\"home-page\">\n        <div className=\"category-list\">\n          {categories.map(({ id, name }) => (\n            <Category\n              key={ id }\n              id={ id }\n              name={ name }\n              handleChange={ this.handleCategory }\n            />\n          ))}\n        </div>\n        <div className=\"main-page\">\n          <div className=\"main-input\">\n            <label\n              htmlFor=\"search-product\"\n              data-testid=\"home-initial-message\"\n            >\n              <input\n                name=\"search\"\n                onChange={ this.handleChange }\n                type=\"text\"\n                className=\"search-product form-control\"\n                placeholder=\"Digite algum termo de pesquisa ou escolha uma categoria.\"\n                data-testid=\"query-input\"\n                value={ search }\n              />\n              <span\n                className=\"input-search\"\n              >\n                Digite algum termo de pesquisa ou escolha uma categoria.\n              </span>\n            </label>\n            <button\n              onClick={ this.queryResult }\n              type=\"button\"\n              data-testid=\"query-button\"\n              className=\"btn btn-primary\"\n            >\n              <i className=\"fas fa-search\" />\n            </button>\n            <Link\n              to=\"/ShoppingCart\"\n              data-testid=\"shopping-cart-button\"\n              className=\"btn btn-warning\"\n            >\n              <i className=\"fas fa-shopping-cart\" />\n              <span className=\"cart-size\" data-testid=\"shopping-cart-size\">\n                { cart }\n              </span>\n            </Link>\n          </div>\n          <div className=\"main-product\">\n            {\n              voidSearch\n                ? <h1>Nenhum produto foi encontrado </h1>\n                : searchResult.map((product) => (\n                  <Product\n                    key={ product.id }\n                    product={ product }\n                    callback={ this.getLocalStorage }\n                  />\n                ))\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport '../styles/ShoppingCartItem.css';\nimport PropTypes from 'prop-types';\n\nexport default class ShoppingCartItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.item.id,\n      title: props.item.title,\n      thumbnail: props.item.thumbnail,\n      quantity: props.item.quantity,\n      price: props.item.price,\n      totalPrice: props.item.price,\n      buttonIncrease: false,\n      availableQuantity: props.item.available_quantity,\n    };\n\n    this.handleIncrease = this.handleIncrease.bind(this);\n    this.handleDecrease = this.handleDecrease.bind(this);\n    this.totalPrice = this.totalPrice.bind(this);\n    this.updatePriceAndProduct = this.updatePriceAndProduct.bind(this);\n    this.checkQuantity = this.checkQuantity.bind(this);\n  }\n\n  componentDidMount() {\n    this.checkQuantity();\n  }\n\n  handleIncrease() {\n    const { quantity, availableQuantity } = this.state;\n    if (quantity === availableQuantity) {\n      this.setState({ buttonIncrease: true });\n    } else {\n      this.setState({\n        quantity: quantity + 1,\n      }, () => {\n        this.updatePriceAndProduct();\n      });\n    }\n  }\n\n  handleDecrease() {\n    const { quantity } = this.state;\n    if (quantity > 0) {\n      this.setState({\n        quantity: quantity - 1,\n        buttonIncrease: false,\n      }, () => {\n        this.updatePriceAndProduct();\n      });\n    }\n  }\n\n  checkQuantity() {\n    const { quantity, availableQuantity } = this.state;\n    if (quantity === availableQuantity) {\n      this.setState({ buttonIncrease: true });\n    }\n  }\n\n  updatePriceAndProduct() {\n    const { id, title, thumbnail, quantity, price } = this.state;\n    const { updatedProduct } = this.props;\n    this.totalPrice();\n    updatedProduct({ id, title, thumbnail, quantity, price });\n  }\n\n  totalPrice() {\n    const { quantity, price } = this.state;\n    const newTotalPrice = quantity * price;\n    this.setState({\n      totalPrice: newTotalPrice,\n    });\n  }\n\n  render() {\n    const { id, title, thumbnail, quantity, totalPrice, buttonIncrease } = this.state;\n    const { deletProduct } = this.props;\n    return (\n      <div className=\"shopping-cart-item-section\">\n        <div className=\"cart-description\">\n          <button\n            type=\"button\"\n            onClick={ () => deletProduct(id) }\n            className=\"delet-product\"\n          >\n            <i className=\"fas fa-times-circle fa-lg\" />\n          </button>\n          <img className=\"image-product\" src={ thumbnail } alt={ title } />\n          <span\n            className=\"title-product\"\n            data-testid=\"shopping-cart-product-name\"\n          >\n            { title }\n          </span>\n        </div>\n        <div className=\"cart-buttons\">\n          <button\n            className=\"button-quantity\"\n            type=\"button\"\n            onClick={ this.handleDecrease }\n            data-testid=\"product-decrease-quantity\"\n          >\n            <i className=\"fas fa-minus-circle fa-lg\" />\n          </button>\n          <span\n            className=\"quantity-producty\"\n            data-testid=\"shopping-cart-product-quantity\"\n          >\n            { quantity }\n          </span>\n          <button\n            className=\"button-quantity\"\n            type=\"button\"\n            onClick={ this.handleIncrease }\n            data-testid=\"product-increase-quantity\"\n            disabled={ buttonIncrease }\n          >\n            <i className=\"fas fa-plus-circle fa-lg\" />\n          </button>\n          <span className=\"price-product\">\n            R$\n            { Math.round(totalPrice * 100) / 100 }\n          </span>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nShoppingCartItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    thumbnail: PropTypes.string.isRequired,\n    quantity: PropTypes.number.isRequired,\n    price: PropTypes.number.isRequired,\n    available_quantity: PropTypes.number.isRequired,\n  }).isRequired,\n  updatedProduct: PropTypes.func.isRequired,\n  deletProduct: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ShoppingCartItem from '../components/ShoppingCartItem';\nimport '../styles/ShoppingCart.css';\n\nexport default class ShoppingCart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shoppingCart: [],\n      totalShoppingCart: 0,\n    };\n    this.deletProduct = this.deletProduct.bind(this);\n    this.updatedProduct = this.updatedProduct.bind(this);\n    this.totalShoppingCart = this.totalShoppingCart.bind(this);\n    this.retrieveCartItems = this.retrieveCartItems.bind(this);\n  }\n\n  componentDidMount() {\n    this.retrieveCartItems();\n  }\n\n  retrieveCartItems() {\n    let cartItems = JSON.parse(localStorage.getItem('cart'));\n    if (cartItems === null) {\n      cartItems = [];\n    }\n    this.setState((state) => ({\n      shoppingCart: [...state.shoppingCart, ...cartItems],\n    }), () => {\n      this.totalShoppingCart();\n    });\n  }\n\n  deletProduct(id) {\n    const cartItems = JSON.parse(localStorage.getItem('cart'));\n    const removedItemCart = cartItems.filter((item) => item.id !== id);\n    localStorage.setItem('cart', JSON.stringify([...removedItemCart]));\n    this.setState({\n      shoppingCart: [...removedItemCart],\n    }, () => this.totalShoppingCart());\n  }\n\n  updatedProduct({ ...productUpdated }) {\n    const { shoppingCart } = this.state;\n    const newShoppincart = shoppingCart.map((product) => {\n      if (product.id === productUpdated.id) {\n        return { ...product, ...productUpdated };\n      }\n      return product;\n    });\n    this.setState({\n      shoppingCart: [...newShoppincart],\n    });\n    localStorage.setItem('cart', JSON.stringify([...newShoppincart]));\n    this.totalShoppingCart();\n  }\n\n  totalShoppingCart() {\n    this.setState({\n      totalShoppingCart: 0,\n    }, () => {\n      const { shoppingCart } = this.state;\n      const totalSumPrices = shoppingCart.reduce(\n        (acc, total) => acc + (total.quantity * total.price), 0,\n      );\n      this.setState({\n        totalShoppingCart: Math.round(totalSumPrices * 100) / 100,\n      });\n    });\n  }\n\n  render() {\n    const { shoppingCart, totalShoppingCart } = this.state;\n    return (\n      <div className=\"shopping-cart-page\">\n        <div className=\"button-back\">\n          <Link to=\"/frontend-online-store\">\n            <div className=\"icons\">\n              <i className=\"fas fa-arrow-left\">Voltar</i>\n            </div>\n          </Link>\n        </div>\n        <div className=\"page-title\">\n          <h2>Carrinho de Compras</h2>\n        </div>\n        <div className=\"shopping-cart-products-list\">\n          { shoppingCart.length === 0\n            ? <h2 data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</h2>\n            : shoppingCart.map((product) => (\n              <ShoppingCartItem\n                key={ product.id }\n                item={ product }\n                deletProduct={ this.deletProduct }\n                updatedProduct={ this.updatedProduct }\n              />)) }\n        </div>\n        <div className=\"total-shopping-cart-section\">\n          <p className=\"total-shopping-cart\">\n            <b>\n              Total:\n              R$\n              { totalShoppingCart }\n            </b>\n          </p>\n          <Link\n            className=\"btn btn-success\"\n            data-testid=\"checkout-products\"\n            to={ {\n              pathname: '/Checkout',\n              state: {\n                cart: shoppingCart },\n            } }\n          >\n            Ir para Checkout\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Rating extends Component {\n  render() {\n    const { handleChange } = this.props;\n    return (\n      <div className=\"form-radio\">\n        <div className=\"form-check\">\n          <label htmlFor=\"1-star\">\n            1\n            <input\n              type=\"radio\"\n              value={ 1 }\n              name=\"formStars\"\n              className=\"form-check-input\"\n              id=\"1-star\"\n              onChange={ handleChange }\n            />\n          </label>\n        </div>\n        <div className=\"form-check\">\n          <label htmlFor=\"2-star\">\n            2\n            <input\n              type=\"radio\"\n              value={ 2 }\n              name=\"formStars\"\n              className=\"form-check-input\"\n              id=\"2-star\"\n              onChange={ handleChange }\n            />\n          </label>\n        </div>\n        <div className=\"form-check\">\n          <label htmlFor=\"3-star\">\n            3\n            <input\n              type=\"radio\"\n              value={ 3 }\n              className=\"form-check-input\"\n              name=\"formStars\"\n              id=\"3-star\"\n              onChange={ handleChange }\n            />\n          </label>\n        </div>\n        <div className=\"form-check\">\n          <label htmlFor=\"4-star\">\n            4\n            <input\n              type=\"radio\"\n              value={ 4 }\n              name=\"formStars\"\n              className=\"form-check-input\"\n              id=\"4-star\"\n              onChange={ handleChange }\n            />\n          </label>\n        </div>\n        <div className=\"form-check\">\n          <label htmlFor=\"5-star\">\n            5\n            <input\n              type=\"radio\"\n              value={ 5 }\n              name=\"formStars\"\n              className=\"form-check-input\"\n              id=\"5-star\"\n              onChange={ handleChange }\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nRating.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Rating from './Rating';\nimport '../styles/AvaliationForm.css';\n\nexport default class AvaliationForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      avaliation: {\n        formStars: 0,\n        email: '',\n        message: '',\n      },\n    };\n    this.handleForm = this.handleForm.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const { target: { name, value } } = event;\n    // função seta o estado recuperando o valor anterior e espalhando ele no novo objeto\n    this.setState((state) => ({\n      avaliation: {\n        ...state.avaliation,\n        [name]: value,\n      },\n    }));\n  }\n\n  handleForm() {\n    // recebe props e estado\n    const { productId } = this.props;\n    const { avaliation } = this.state;\n\n    // Recebe as avaliações do item do localStorage e trata se estiver vazia\n    let storage = JSON.parse(localStorage.getItem(`reviewsProduct${productId}`));\n    if (!storage) {\n      storage = [];\n    }\n\n    const idObj = { id: productId };\n\n    // junta o objeto do id com o estado atual da aplicação\n    const obj = Object.assign(idObj, avaliation);\n\n    // Adiciona ao localStorage a avaliação\n    storage.push(obj);\n    localStorage.setItem(`reviewsProduct${productId}`, JSON.stringify([...storage]));\n\n    // Força a página atualizar\n    window.location.reload();\n  }\n\n  render() {\n    const { avaliation } = this.state;\n    const { email, message } = avaliation;\n    return (\n      <form>\n        <h2>Avaliações</h2>\n        <div className=\"form-check email-rating\">\n          <label className=\"email-label\" htmlFor=\"form-email\">\n            <input\n              name=\"email\"\n              id=\"form-email\"\n              value={ email }\n              placeholder=\"Email\"\n              onChange={ this.handleChange }\n            />\n          </label>\n          <Rating handleChange={ this.handleChange } />\n        </div>\n        <div className=\"form-check\">\n          <label className=\"avaliation-textarea\" htmlFor=\"form-text-area\">\n            <textarea\n              name=\"message\"\n              data-testid=\"product-detail-evaluation\"\n              id=\"form-text-area\"\n              value={ message }\n              className=\"\"\n              onChange={ this.handleChange }\n            />\n          </label>\n        </div>\n        <div className=\"form-check\">\n          <button\n            onClick={ this.handleForm }\n            className=\"btn btn-primary\"\n            type=\"button\"\n          >\n            Avaliar\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nAvaliationForm.propTypes = {\n  productId: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/Avaliations.css';\n\nexport default class Avaliations extends Component {\n  constructor() {\n    super();\n    this.state = {\n      avaliations: [],\n    };\n    this.getLocalStorage = this.getLocalStorage.bind(this);\n  }\n\n  componentDidMount() {\n    this.getLocalStorage();\n  }\n\n  getLocalStorage() {\n    // Recebe o id do produto via props\n    const { productId } = this.props;\n\n    // Recupera o localStorage do item\n    let storage = JSON.parse(localStorage.getItem(`reviewsProduct${productId}`));\n    if (storage === null) {\n      storage = [];\n    }\n\n    // Seta o estado com as avaliações\n    this.setState((state) => ({\n      avaliations: [...state.avaliations, ...storage],\n    }));\n  }\n\n  render() {\n    const { avaliations } = this.state;\n    return (\n      <div className=\"avaliation-wrapper\">\n        <h2>Pessoas que avaliaram</h2>\n        { avaliations.map(({ formStars, email, message }, index) => (\n          <div className=\"avaliation form-check\" key={ index }>\n            <div className=\"avaliation-email-rating\">\n              <p>\n                Email:\n                { email }\n              </p>\n              <p className=\"avaliation-rating\">\n                Nota:\n                { formStars }\n              </p>\n            </div>\n            <div className=\"avaliation-message\">\n              <p>\n                Mensagem:\n                { message }\n              </p>\n            </div>\n          </div>\n        )) }\n      </div>\n    );\n  }\n}\n\nAvaliations.propTypes = {\n  productId: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AvaliationForm from '../components/AvaliationForm';\nimport Avaliations from '../components/Avaliations';\nimport handleCart from '../services/localStorage';\nimport '../styles/Details.css';\n\nexport default class Details extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cart: 0,\n    };\n    this.getLocalStorage = this.getLocalStorage.bind(this);\n  }\n\n  componentDidMount() {\n    this.getLocalStorage();\n  }\n\n  getLocalStorage() {\n    let cartItems = JSON.parse(localStorage.getItem('cart'));\n    if (cartItems === null) {\n      cartItems = [];\n    }\n    const result = cartItems.reduce((acc, item) => acc + item.quantity, 0);\n    this.setState({\n      cart: result,\n    });\n  }\n\n  addQuantity(product) {\n    const quantityProduct = { quantity: 1 };\n    const obj = Object.assign(quantityProduct, product);\n    handleCart(obj);\n    this.getLocalStorage();\n  }\n\n  freeShipping() {\n    return (\n      <span className=\"free-shipping btn-success\" data-testid=\"free-shipping\">\n        Frete Grátis\n      </span>\n    );\n  }\n\n  render() {\n    const {\n      match: { params: { id } },\n      location: { state: { element } },\n    } = this.props;\n    const { title, price, thumbnail, attributes, shipping } = element;\n    const { cart } = this.state;\n    const { free_shipping: freeShipping } = shipping;\n    return (\n      <div className=\"details\">\n        <div className=\"detail-buttons\">\n          <Link to=\"/frontend-online-store\">\n            <div className=\"icons\">\n              <i className=\"fas fa-arrow-left\">Voltar</i>\n            </div>\n          </Link>\n          <Link\n            to=\"/ShoppingCart\"\n            data-testid=\"shopping-cart-button\"\n            className=\"btn btn-warning\"\n          >\n            <i className=\"fas fa-shopping-cart\" />\n            <span className=\"cart-size\" data-testid=\"shopping-cart-size\">\n              { cart }\n            </span>\n          </Link>\n        </div>\n        <div>\n          <div>\n            <h3 data-testid=\"product-detail-name\">{`${title}`}</h3>\n            {\n              freeShipping && this.freeShipping()\n            }\n          </div>\n          <div className=\"detail-image-info\">\n            <div className=\"detail-image\">\n              <img src={ thumbnail } alt={ title } />\n            </div>\n            <div className=\"detail-information\">\n              <h3>Especificações técnicas</h3>\n              { attributes.map(({ name, value_name: valueName, id: attributeId }) => (\n                <p key={ attributeId }>\n                  { name }\n                  :\n                  { valueName }\n                </p>\n              ))}\n              <p className=\"detail-price\">{`R$${price}`}</p>\n              <button\n                type=\"button\"\n                className=\"btn btn-success\"\n                data-testid=\"product-detail-add-to-cart\"\n                onClick={ () => this.addQuantity(element) }\n              >\n                Adicionar ao carrinho\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div>\n          <AvaliationForm\n            getForm={ this.getForm }\n            productId={ id }\n          />\n          <Avaliations\n            productId={ id }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      element: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired,\n        thumbnail: PropTypes.string.isRequired,\n        shipping: PropTypes.shape({\n          free_shipping: PropTypes.bool.isRequired,\n        }).isRequired,\n        attributes: PropTypes.arrayOf(PropTypes.object).isRequired,\n      }).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import React from 'react';\n\nexport default function States() {\n  return (\n    <select id=\"estado\" name=\"estado\">\n      <option value=\"\" defaultValue>Estados</option>\n      <option value=\"AC\">Acre</option>\n      <option value=\"AL\">Alagoas</option>\n      <option value=\"AP\">Amapá</option>\n      <option value=\"AM\">Amazonas</option>\n      <option value=\"BA\">Bahia</option>\n      <option value=\"CE\">Ceará</option>\n      <option value=\"DF\">Distrito Federal</option>\n      <option value=\"ES\">Espírito Santo</option>\n      <option value=\"GO\">Goiás</option>\n      <option value=\"MA\">Maranhão</option>\n      <option value=\"MT\">Mato Grosso</option>\n      <option value=\"MS\">Mato Grosso do Sul</option>\n      <option value=\"MG\">Minas Gerais</option>\n      <option value=\"PA\">Pará</option>\n      <option value=\"PB\">Paraíba</option>\n      <option value=\"PR\">Paraná</option>\n      <option value=\"PE\">Pernambuco</option>\n      <option value=\"PI\">Piauí</option>\n      <option value=\"RJ\">Rio de Janeiro</option>\n      <option value=\"RN\">Rio Grande do Norte</option>\n      <option value=\"RS\">Rio Grande do Sul</option>\n      <option value=\"RO\">Rondônia</option>\n      <option value=\"RR\">Roraima</option>\n      <option value=\"SC\">Santa Catarina</option>\n      <option value=\"SP\">São Paulo</option>\n      <option value=\"SE\">Sergipe</option>\n      <option value=\"TO\">Tocantins</option>\n      <option value=\"EX\">Estrangeiro</option>\n    </select>\n  );\n}\n","import React, { Component } from 'react';\nimport States from './States';\n\nexport default class BuyerInfo extends Component {\n  render() {\n    return (\n      <div>\n        <div>\n          <h2>Informações do Comprador</h2>\n        </div>\n        <div>\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Nome Completo\"\n              data-testid=\"checkout-fullname\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"CPF\"\n              data-testid=\"checkout-email\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Email\"\n              data-testid=\"checkout-cpf\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Telefone\"\n              data-testid=\"checkout-phone\"\n            />\n          </div>\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"CEP\"\n              data-testid=\"checkout-cep\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Endereço\"\n              data-testid=\"checkout-address\"\n            />\n          </div>\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Complemento\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Numero\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Cidade\"\n            />\n            <States />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport BuyerInfo from '../components/BuyerInfo';\n\nexport default class Checkout extends Component {\n  constructor(props) {\n    super(props);\n    const { location: { state } } = props;\n    const cart = state ? state.cart : [];\n    this.state = {\n      redirectCheckout: false,\n      checkoutResume: [...cart],\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.setState({\n      redirectCheckout: true,\n    });\n  }\n\n  render() {\n    const { redirectCheckout, checkoutResume } = this.state;\n    return (\n      <div>\n        <div>\n          <Link to=\"/frontend-online-store\">\n            Voltar\n          </Link>\n        </div>\n        <div>\n          <h2>Revise seus Produtos</h2>\n          { checkoutResume.map(({ id, title, price, thumbnail }) => (\n            <div key={ id }>\n              <p>{ title }</p>\n              <p><img src={ thumbnail } alt={ title } /></p>\n              <p>\n                R$\n                { price }\n              </p>\n            </div>\n          ))}\n        </div>\n        <div>\n          <BuyerInfo />\n        </div>\n        <div>\n          <h2>Método de Pagamento</h2>\n        </div>\n        <div>\n          <button\n            type=\"button\"\n            onClick={ this.handleChange }\n          >\n            Comprar\n          </button>\n          { redirectCheckout ? <Redirect to=\"/CheckoutSuccessful\" /> : null }\n        </div>\n      </div>\n    );\n  }\n}\n\nCheckout.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      cart: PropTypes.arrayOf(PropTypes.object).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function CheckoutSuccessful() {\n  return (\n    <div>\n      <h1>Muito obrigado pela sua compra!</h1>\n      <Link to=\"/\">Home</Link>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Home from './pages/Home';\nimport ShoppingCart from './pages/ShoppingCart';\nimport Details from './pages/Details';\nimport Checkout from './pages/Checkout';\nimport CheckoutSuccessful from './pages/CheckoutSuccessful';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/frontend-online-store\" component={ Home } />\n          <Route path=\"/ShoppingCart\" component={ ShoppingCart } />\n          <Route path=\"/Details/:id\" component={ Details } />\n          <Route path=\"/Checkout\" component={ Checkout } />\n          <Route path=\"/CheckoutSuccessful\" component={ CheckoutSuccessful } />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}